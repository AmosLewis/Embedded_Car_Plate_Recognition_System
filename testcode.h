#ifndef TESTCODE_H
#define TESTCODE_H

#include "cv.h"
#include "highgui.h"
#include "cxcore.h"
#include <stdio.h>
#include <math.h>
#include <string.h>
#include <string>
#include <iostream>
using namespace std;

class Testcode
{
public:
    /*
    Testcode();
    ~Testcode();
*/
private:
#define POINT_X  18                                           // 水平方向不重叠点
#define POINT_Y  2                                            // 垂直方向不重叠点
#define WITH_X 0.1                                            // 水平方向车牌在图区域
#define WITH_Y 0.2                                            // 垂直方向车牌在图区域
#define HIGH_WITH_CAR   4.8   //(440/85)       // 小车的宽高比  440/140
#define CHARACTER 15
#define TEMPLETENUM  43

IplImage *pImgCanny=NULL;  //二值化的图
IplImage *pImgResize=NULL;   //归一化的车牌区域灰度图
IplImage *pImgCharOne=NULL;   //字符图片
IplImage *pImgCharTwo=NULL;
IplImage *pImgCharThree=NULL;
IplImage *pImgCharFour=NULL;
IplImage *pImgCharFive=NULL;
IplImage *pImgCharSix=NULL;
IplImage *pImgCharSeven=NULL;
IplImage *src=NULL;
CvPoint pt[4];
IplImage* img = 0;
IplImage* img0 = 0;
IplImage* img2=0;
CvRect res;
const int Num_Templete[TEMPLETENUM][CHARACTER]=
{
    {16,19,10,12,10,10,15,18,110,3,2,2,3,3,3},     //0
    {9,11,10,10,10,10,9,10,79,2,2,2,0,2,12},       //1
    {18,19,3,18,10,10,23,22,123,4,2,2,7,6,8},      //2
    {19,21,11,14,4,20,18,22,129,2,2,4,6,6,7},      //3
    {2,18,11,22,20,21,11,18,123,2,4,2,6,7,5},      //4
    {23,19,20,12,9,20,18,22,143,2,4,4,6,6,6},      //5
    {6,13,17,8,15,20,18,20,117,2,2,4,5,7,6},       //6
    {21,21,0,20,8,12,9,11,102,2,2,2,2,8,15},       //7
    {17,18,18,19,14,20,17,20,143,4,2,4,6,6,6},     //8
    {16,18,15,21,7,19,13,7,116,3,2,2,6,6,5},       //9
    {10,10,16,16,20,20,18,19,129,2,4,2,8,3,6},     //A
    {24,20,20,19,22,22,24,20,171,4,8,4,6,6,6},     //B
    {18,19,20,4,20,8,17,21,127,3,2,4,4,4,4},       //C
    {23,19,11,20,12,20,22,21,148,3,3,3,4,4,4},     //D
    {23,19,21,9,22,8,23,23,148,2,2,2,6,6,6},       //E
    {25,17,20,9,22,8,19,0,120,2,2,2,4,4,4},        //F
    {17,18,22,14,12,24,18,21,146,4,7,4,4,6,6},     //G
    {14,20,18,22,17,22,16,20,149,4,1,4,2,2,2},     //H
    {0,17,0,20,3,20,18,22,100,2,2,4,2,2,2},        //J
    {19,20,26,10,20,20,20,22,157,4,4,4,3,5,11},    //K
    {20,0,20,0,20,0,25,20,105,2,2,2,2,2,2},        //L
    {20,10,27,17,20,10,22,14,140,1,3,3,4,1,5},     //M
    {21,12,25,17,26,12,18,18,149,3,5,3,5,5,6},     //N
    {23,19,18,20,21,8,22,0,131,3,3,2,4,4,4},       //P
    {18,19,20,10,26,15,18,21,147,3,3,4,5,7,5},     //Q
    {26,19,21,18,21,17,20,21,163,4,3,4,4,6,5},     //R
    {18,18,18,10,8,17,17,22,128,4,3,4,6,6,6},      //S
    {22,18,10,10,10,10,10,10,100,2,2,2,33,2,2},    //T
    {18,12,20,10,20,10,19,21,130,3,3,3,2,2,2},     //U
    {20,19,20,20,15,14,9,10,127,4,4,2,9,1,8},      //V
    {21,25,26,28,16,16,21,19,172,6,2,4,13,0,7},    //W
    {21,21,13,13,12,11,22,21,134,4,2,4,8,0,10},    //X
    {21,20,10,11,10,10,10,11,103,3,2,2,5,2,6},     //Y
    {21,23,5,15,15,5,24,20,128,2,2,2,8,8,7},       //Z
    {13,14,10,10,10,10,13,13,93,2,2,2,29,2,29},    //I
    {20,20,13,20,19,12,17,20,141,3,3,4,4,4,4},     //O          //36
    {14,15,17,17,16,10,25,24,138,0,2,4,12,8,9},    //云        //37
    {17,20,17,12,33,28,23,20,170,3,4,7,13,6,4},    //苏
    {21,21,23,24,24,25,31,27,196,0,9,6,8,6,7},     //京
    {19,27,20,34,19,36,24,37,216,4,4,7,13,28,3},   //湘
    {17,14,23,27,36,40,26,27,210,4,13,4,16,14,14}, //鲁
    {24,24,32,38,34,32,17,22,223,9,6,10,11,12,9}, // 粤
    {22,20,33,37,25,24,24,25,210,13,3,6,12,8,7}    //蒙
};

//车牌字符
char *PlateCode[TEMPLETENUM] =
{
    "0", "1", "2", "3", "4" ,
    "5","6", "7", "8", "9",
    "A", "B", "C", "D","E",
    "F", "G","H", "J", "K",
    "L", "M", "N","P", "Q",
    "R", "S", "T", "U", "V",
    "W","X", "Y", "Z", "I", "O",
    "云", "苏","京", "湘", "鲁","粤","蒙"
};
char *G_PlateChar[7]={"没", "有","找", "到", "车", "牌" ,"!"}; // 车牌号

public:
    string testcode(string filename);
private:
    int AdaptiveThreshold(int t, IplImage *Image);
    void Threshold(IplImage *Image, IplImage *Image_O);
    int PlateAreaSearch(IplImage *pImg_Image);
    int SegmentPlate();
    int CodeRecognize(IplImage *imgTest, int num, int char_num);
    void OnShibiecar();
};

#endif // TESTCODE_H
